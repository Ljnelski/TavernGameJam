[gd_resource type="VisualShader" load_steps=13 format=3 uid="uid://l12bvvuftijb"]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_jrh08"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_egc6m"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.1, 0.1, 0)]
operator = 2

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_ovcnx"]
parameter_name = "IsInDimension"

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_jp2hg"]
default_input_values = [0, false, 1, Vector3(1, 1, 1), 2, Vector3(1, 1, 1)]
op_type = 4

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_ohex3"]
parameter_name = "BaseTexture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ltbop"]
source = 5

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_j0cs7"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.6, 0, 0)]
operator = 4

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_7qhxa"]
parameter_name = "OverlayTexture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_uv3vq"]
source = 5

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_8fp5j"]
operator = 4

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_nancx"]
parameter_name = "NosieColor"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_cwck7"]
input_name = "time"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D BaseTexture;
uniform bool IsInDimension;
uniform sampler2D OverlayTexture;
uniform vec4 NosieColor : source_color;



void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(BaseTexture, UV);


// BooleanParameter:15
	bool n_out15p0 = IsInDimension;


// Input:9
	float n_out9p0 = TIME;


// UVFunc:11
	vec2 n_in11p1 = vec2(1.00000, 1.00000);
	vec2 n_out11p0 = vec2(n_out9p0) * n_in11p1 + UV;


// VectorOp:14
	vec3 n_in14p1 = vec3(0.10000, 0.10000, 0.00000);
	vec3 n_out14p0 = vec3(n_out11p0, 0.0) * n_in14p1;


	vec4 n_out6p0;
// Texture2D:6
	n_out6p0 = texture(OverlayTexture, vec2(n_out14p0.xy));


// ColorParameter:8
	vec4 n_out8p0 = NosieColor;


	vec3 n_out7p0;
// ColorOp:7
	{
		float base = vec3(n_out6p0.xyz).x;
		float blend = vec3(n_out8p0.xyz).x;
		if (base < 0.5) {
			n_out7p0.x = 2.0 * base * blend;
		} else {
			n_out7p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out6p0.xyz).y;
		float blend = vec3(n_out8p0.xyz).y;
		if (base < 0.5) {
			n_out7p0.y = 2.0 * base * blend;
		} else {
			n_out7p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out6p0.xyz).z;
		float blend = vec3(n_out8p0.xyz).z;
		if (base < 0.5) {
			n_out7p0.z = 2.0 * base * blend;
		} else {
			n_out7p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


	vec3 n_out16p0;
// Switch:16
	vec3 n_in16p2 = vec3(1.00000, 1.00000, 1.00000);
	n_out16p0 = mix(n_in16p2, n_out7p0, float(n_out15p0));


	vec3 n_out4p0;
// ColorOp:4
	{
		float base = vec3(n_out3p0.xyz).x;
		float blend = n_out16p0.x;
		if (base < 0.5) {
			n_out4p0.x = 2.0 * base * blend;
		} else {
			n_out4p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out3p0.xyz).y;
		float blend = n_out16p0.y;
		if (base < 0.5) {
			n_out4p0.y = 2.0 * base * blend;
		} else {
			n_out4p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out3p0.xyz).z;
		float blend = n_out16p0.z;
		if (base < 0.5) {
			n_out4p0.z = 2.0 * base * blend;
		} else {
			n_out4p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// Output:0
	ALBEDO = n_out4p0;


}
"
graph_offset = Vector2(-1024.95, -116.87)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_ohex3")
nodes/fragment/2/position = Vector2(-440, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_ltbop")
nodes/fragment/3/position = Vector2(-120, 200)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorOp_j0cs7")
nodes/fragment/4/position = Vector2(160, 400)
nodes/fragment/5/node = SubResource("VisualShaderNodeTexture2DParameter_7qhxa")
nodes/fragment/5/position = Vector2(-1080, 600)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture_uv3vq")
nodes/fragment/6/position = Vector2(-720, 440)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorOp_8fp5j")
nodes/fragment/7/position = Vector2(-420, 520)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorParameter_nancx")
nodes/fragment/8/position = Vector2(-740, 660)
nodes/fragment/9/node = SubResource("VisualShaderNodeInput_cwck7")
nodes/fragment/9/position = Vector2(-1400, 520)
nodes/fragment/11/node = SubResource("VisualShaderNodeUVFunc_jrh08")
nodes/fragment/11/position = Vector2(-1120, 440)
nodes/fragment/14/node = SubResource("VisualShaderNodeVectorOp_egc6m")
nodes/fragment/14/position = Vector2(-900, 420)
nodes/fragment/15/node = SubResource("VisualShaderNodeBooleanParameter_ovcnx")
nodes/fragment/15/position = Vector2(-420, 640)
nodes/fragment/16/node = SubResource("VisualShaderNodeSwitch_jp2hg")
nodes/fragment/16/position = Vector2(-120, 500)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 4, 0, 4, 0, 0, 0, 5, 0, 6, 2, 6, 0, 7, 0, 8, 0, 7, 1, 9, 0, 11, 2, 14, 0, 6, 0, 11, 0, 14, 0, 15, 0, 16, 0, 7, 0, 16, 1, 16, 0, 4, 1)
